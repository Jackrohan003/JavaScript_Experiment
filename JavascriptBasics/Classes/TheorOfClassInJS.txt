• Class definition: In class-based languages, a class is defined in a separate class definition in addition to the constructors, to
create instances of the class. A constructor method can specify initial values for the instance's properties and perform other
processing appropriate at creation time.
• Object instantiation: new operator is used in association with the constructor method to create class instances.
• constructor method is named ‘constructor()’ in JS as opposed to class name (Hero() here) in Java
• A class cannot have more than one constructor() method. This will throw a syntax error
• Also, note that class is simply syntactic sugar, does not add any new functionality

Class is only syntactic sugar

• Before ES6, JavaScript did not have classes, but it had constructor functions and
prototypes to bring similar functionality to JavaScript.
• In fact, the class declaration works over the existing prototype-based inheritance
and does not really add any extra functionality to the language.

• Classes are essentially constructor functions with a prototype property

• To understand what happens in the background when classes are used to create
objects, one needs to understand the following:
• Constructor function
• Properties: prototype and __proto__
• Object constructor
